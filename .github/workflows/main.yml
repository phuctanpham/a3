name: Deploy Cloudflare Pages & Workers

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  validate-secrets:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Check Secrets Existence
        run: |
          if [ -z "${{ secrets.CLOUDFLARE_API_TOKEN }}" ]; then
            echo "❌ Error: CLOUDFLARE_API_TOKEN secret is not set"
            exit 1
          fi
          if [ -z "${{ secrets.CLOUDFLARE_ACCOUNT_ID }}" ]; then
            echo "❌ Error: CLOUDFLARE_ACCOUNT_ID secret is not set"
            exit 1
          fi
          echo "✅ GitHub secrets are configured"
      
      - name: Verify Cloudflare API Credentials
        run: |
          chmod +x .github/utils/cloudflare.sh
          .github/utils/cloudflare.sh "${{ secrets.CLOUDFLARE_API_TOKEN }}" "${{ secrets.CLOUDFLARE_ACCOUNT_ID }}"

  detect-changes:
    needs: validate-secrets
    runs-on: ubuntu-latest
    outputs:
      site: ${{ steps.filter.outputs.site }}
      app: ${{ steps.filter.outputs.app }}
      api: ${{ steps.filter.outputs.api }}
      auth: ${{ steps.filter.outputs.auth }}
    steps:
      - uses: actions/checkout@v4
      
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            site:
              - 'site/**'
            app:
              - 'app/**'
            api:
              - 'api/**'
            auth:
              - 'auth/**'

  deploy-site:
    needs: detect-changes
    if: needs.detect-changes.outputs.site == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: site/package-lock.json
      
      - name: Install dependencies
        working-directory: ./site
        run: npm ci
      
      - name: Build Docusaurus site
        working-directory: ./site
        run: npm run build
      
      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy ./build --project-name=site
          workingDirectory: ./site

  deploy-app:
    needs: detect-changes
    if: needs.detect-changes.outputs.app == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: app/package-lock.json
      
      - name: Install dependencies
        working-directory: ./app
        run: npm ci
      
      - name: Build React app
        working-directory: ./app
        run: npm run build
      
      - name: Check build output
        working-directory: ./app
        run: |
          echo "Checking for build directories..."
          if [ -d "dist" ]; then
            echo "✅ Found dist directory"
            BUILD_DIR="dist"
          elif [ -d "build" ]; then
            echo "✅ Found build directory"
            BUILD_DIR="build"
          else
            echo "❌ No build output found"
            ls -la
            exit 1
          fi
          echo "BUILD_DIR=$BUILD_DIR" >> $GITHUB_ENV
      
      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy ./${{ env.BUILD_DIR }} --project-name=app
          workingDirectory: ./app

  deploy-api:
    needs: detect-changes
    if: needs.detect-changes.outputs.api == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: api/package-lock.json
      
      - name: Install dependencies
        working-directory: ./api
        run: npm ci
      
      - name: Deploy to Cloudflare Workers
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy
          workingDirectory: ./api

  deploy-auth:
    needs: detect-changes
    if: needs.detect-changes.outputs.auth == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: auth/package-lock.json
      
      - name: Install dependencies
        working-directory: ./auth
        run: npm ci
      
      - name: Deploy to Cloudflare Workers
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy
          workingDirectory: ./auth